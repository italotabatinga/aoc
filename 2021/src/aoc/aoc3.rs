use crate::Aoc;

pub struct Aoc3 {}

impl Aoc<Vec<u16>, u32> for Aoc3 {
    fn input() -> Vec<u16> {
        Vec::from([
            0b000011110010,
            0b010000100100,
            0b010011111111,
            0b000101001111,
            0b010100011111,
            0b111100111011,
            0b100111011010,
            0b111001000001,
            0b100000100110,
            0b100110011000,
            0b010101010111,
            0b001100100001,
            0b111100111111,
            0b111010001000,
            0b101011101110,
            0b111101001000,
            0b000000111101,
            0b001010111011,
            0b111101100010,
            0b110001100111,
            0b110011011011,
            0b010000000110,
            0b010111100111,
            0b111001111000,
            0b110001101111,
            0b100010011011,
            0b100100110001,
            0b000001100111,
            0b110001110000,
            0b010011011010,
            0b010111110010,
            0b111100101111,
            0b000110111101,
            0b101101101001,
            0b111110000100,
            0b001110100100,
            0b000000110011,
            0b000001010000,
            0b010110000011,
            0b000101010100,
            0b110010010100,
            0b001110011011,
            0b001011110011,
            0b001011000100,
            0b111011100101,
            0b001000011101,
            0b011110001010,
            0b100110100111,
            0b100100101100,
            0b000101101011,
            0b001100000110,
            0b010101000010,
            0b000111001011,
            0b100001110100,
            0b110000110110,
            0b101001110011,
            0b010001111001,
            0b111110111000,
            0b000110011010,
            0b101110000001,
            0b110000100001,
            0b111001000011,
            0b000000101001,
            0b000001100101,
            0b001101110111,
            0b001100000001,
            0b100111100100,
            0b000111000001,
            0b000100111011,
            0b000000110100,
            0b111100100100,
            0b001001000000,
            0b111001100111,
            0b100101110010,
            0b011000110101,
            0b110100110111,
            0b001001110101,
            0b110010011100,
            0b011001011111,
            0b001010110111,
            0b110101000111,
            0b010010011001,
            0b100010110001,
            0b101110101011,
            0b010010011000,
            0b111001000110,
            0b001001100001,
            0b000001110111,
            0b011100011011,
            0b101101011001,
            0b111000011111,
            0b101001110101,
            0b100100110000,
            0b101000001111,
            0b011001110100,
            0b001000100101,
            0b011100111011,
            0b001100101110,
            0b111000111111,
            0b000001100100,
            0b101010010001,
            0b101100110001,
            0b110011001100,
            0b111000100111,
            0b000011000111,
            0b010001000011,
            0b010111100000,
            0b111001000101,
            0b011000001011,
            0b001111100110,
            0b101111110011,
            0b110011000001,
            0b011011011100,
            0b011101000011,
            0b001111100100,
            0b110010110010,
            0b110100110110,
            0b110000001000,
            0b110010001000,
            0b101111101010,
            0b010000001100,
            0b110010010011,
            0b110000011000,
            0b101100011110,
            0b001010010000,
            0b011010011101,
            0b101110100100,
            0b100010011010,
            0b011010011000,
            0b101110000111,
            0b001010100110,
            0b100000000101,
            0b101100100101,
            0b101001111010,
            0b011110010111,
            0b101000111000,
            0b111111010110,
            0b000001111000,
            0b101010111110,
            0b001101100011,
            0b001010111100,
            0b001001100111,
            0b111010100001,
            0b100101101100,
            0b111101110110,
            0b011010111000,
            0b110100000001,
            0b110101000110,
            0b100000010000,
            0b111010100011,
            0b111110001100,
            0b000001101100,
            0b000011011000,
            0b011101000000,
            0b111011111010,
            0b110011100001,
            0b100000111101,
            0b000101010101,
            0b000001110100,
            0b010010000100,
            0b010110110001,
            0b101000100110,
            0b111110010000,
            0b010100111100,
            0b101101000100,
            0b011100001111,
            0b111000001111,
            0b111011111100,
            0b111011001011,
            0b101000010110,
            0b100000011111,
            0b000100010111,
            0b100010111111,
            0b010111000111,
            0b010100111001,
            0b000000000001,
            0b110011111000,
            0b001010001010,
            0b111100011110,
            0b011001001011,
            0b011101101110,
            0b100100110111,
            0b011010010101,
            0b100001111100,
            0b010010111001,
            0b101100000100,
            0b100001000110,
            0b110101101000,
            0b001010000100,
            0b011100111100,
            0b001110010100,
            0b001100001100,
            0b110100100011,
            0b000111010101,
            0b100010011111,
            0b010110110111,
            0b100111010000,
            0b001101111100,
            0b000110011110,
            0b000100101010,
            0b101011001010,
            0b101111010101,
            0b000001000011,
            0b111001000010,
            0b100011100010,
            0b101000000111,
            0b111000010111,
            0b111001110110,
            0b110000100110,
            0b111010011001,
            0b010101110101,
            0b000111010000,
            0b011110100110,
            0b100100010111,
            0b000110001100,
            0b001110111110,
            0b010001001111,
            0b011011110111,
            0b110000111011,
            0b101010110001,
            0b101101010011,
            0b100110101001,
            0b100010010101,
            0b000011111111,
            0b010110110110,
            0b000100110111,
            0b110101011101,
            0b111001100001,
            0b001100110100,
            0b011001010101,
            0b100010101110,
            0b110001011110,
            0b000100101011,
            0b101110100010,
            0b001101000000,
            0b110111110101,
            0b110100010110,
            0b100111000000,
            0b100001000101,
            0b001100111011,
            0b000010001001,
            0b001101001010,
            0b101010001101,
            0b110101101111,
            0b001101011001,
            0b110001000001,
            0b001110100000,
            0b001010010011,
            0b100000010010,
            0b111001101011,
            0b101011000111,
            0b001000010011,
            0b010111111101,
            0b101111000111,
            0b010100100101,
            0b000100000110,
            0b000010110011,
            0b000111011110,
            0b100011110111,
            0b101010110011,
            0b011111001110,
            0b111011110100,
            0b010011000001,
            0b000011101110,
            0b000101010011,
            0b100011110101,
            0b001101001111,
            0b011000010001,
            0b011010010000,
            0b001101011110,
            0b110010010001,
            0b110111111100,
            0b010111001100,
            0b000000111000,
            0b101100110100,
            0b110001111000,
            0b010101110110,
            0b111000101001,
            0b110110010011,
            0b100000101010,
            0b111101100011,
            0b000110100110,
            0b000110100111,
            0b001111111101,
            0b001101110010,
            0b101101100010,
            0b001110001011,
            0b101101001111,
            0b000110100101,
            0b110010011101,
            0b001100011100,
            0b111010101001,
            0b001111001001,
            0b010001100101,
            0b110001101001,
            0b010110011011,
            0b110111110110,
            0b100110001110,
            0b000011010100,
            0b110000001011,
            0b110101110100,
            0b111110101100,
            0b111100100110,
            0b100000100101,
            0b011011010010,
            0b011000000000,
            0b001110001010,
            0b001011110110,
            0b111111010101,
            0b101000011011,
            0b110001110110,
            0b001110010011,
            0b100111111010,
            0b110110011110,
            0b000011101010,
            0b100010011000,
            0b100100001111,
            0b111110001101,
            0b111011111001,
            0b101010011100,
            0b001100000000,
            0b100010000010,
            0b000001110110,
            0b010100110111,
            0b100010100000,
            0b101001101010,
            0b100000011010,
            0b100110111011,
            0b011100010111,
            0b100110101101,
            0b110011010101,
            0b001011110101,
            0b001110010000,
            0b000010101010,
            0b101110001011,
            0b011000010011,
            0b101001011000,
            0b010101101001,
            0b000111110010,
            0b101101111111,
            0b010000011000,
            0b110011101011,
            0b001011101001,
            0b111000001100,
            0b101110100110,
            0b011100101001,
            0b001101011011,
            0b011110101001,
            0b010111101011,
            0b110010000100,
            0b001101010000,
            0b010011011100,
            0b100000110000,
            0b111101100110,
            0b111110110100,
            0b011101111100,
            0b110111110100,
            0b110100010101,
            0b011110110111,
            0b011011011000,
            0b000000100101,
            0b001001010011,
            0b101100001101,
            0b001010101011,
            0b111100011101,
            0b100101101110,
            0b111000001010,
            0b101010011010,
            0b010001111101,
            0b110011001101,
            0b011000111011,
            0b000111101001,
            0b100101100111,
            0b110111111000,
            0b110000000010,
            0b101010111011,
            0b111001110010,
            0b011100110101,
            0b100010111001,
            0b000110110101,
            0b010110101110,
            0b000001101111,
            0b010110110010,
            0b100000110001,
            0b010000001110,
            0b111100110011,
            0b011101101111,
            0b100111000001,
            0b110000000101,
            0b100011010111,
            0b110001001011,
            0b101111001011,
            0b111110010011,
            0b110111111101,
            0b111111111101,
            0b011111001010,
            0b011011001101,
            0b101111000100,
            0b111000101111,
            0b110010000000,
            0b010010111110,
            0b110110110110,
            0b000100001101,
            0b001010001011,
            0b001000010100,
            0b110100001111,
            0b000101000101,
            0b111101101111,
            0b110011111111,
            0b011010011011,
            0b100101110111,
            0b000110000111,
            0b000100110100,
            0b110110101010,
            0b110001110100,
            0b000001111111,
            0b011000000111,
            0b111000100010,
            0b101000010001,
            0b011111000010,
            0b001010001101,
            0b110010100001,
            0b100111101000,
            0b011001101110,
            0b111100111001,
            0b111101110011,
            0b110101110010,
            0b100100010100,
            0b011001111111,
            0b111001011110,
            0b000010100111,
            0b100010101000,
            0b011100111101,
            0b110111011000,
            0b010001111110,
            0b011001001001,
            0b010000011111,
            0b011000001001,
            0b101100000111,
            0b111110000000,
            0b110100101111,
            0b001000100011,
            0b000011100010,
            0b011100110001,
            0b011010000100,
            0b110110000001,
            0b100001010101,
            0b111111111011,
            0b000001010110,
            0b010001110111,
            0b100100111110,
            0b111111011011,
            0b101000111110,
            0b001010011010,
            0b101010011111,
            0b111010000011,
            0b111011011111,
            0b010100111000,
            0b010010110111,
            0b010010100101,
            0b101100101100,
            0b010110110100,
            0b001111001101,
            0b001101101001,
            0b110011010100,
            0b100010100101,
            0b001001010010,
            0b000011000010,
            0b111110000111,
            0b001011010100,
            0b100001000100,
            0b001110001100,
            0b101001110010,
            0b100010000100,
            0b010001010001,
            0b010100110001,
            0b111101001011,
            0b010111000110,
            0b001110101011,
            0b000101011100,
            0b010100101110,
            0b101111111000,
            0b011100111110,
            0b010110111001,
            0b101101001110,
            0b001000011000,
            0b001101100100,
            0b010111011101,
            0b101101101111,
            0b110100110100,
            0b101110111100,
            0b110111110001,
            0b110000100101,
            0b101111110010,
            0b010101111100,
            0b101000100111,
            0b001010101101,
            0b100000010011,
            0b010101010011,
            0b000011101000,
            0b011001000000,
            0b101010110100,
            0b100101101010,
            0b100100011000,
            0b011100110011,
            0b001010100001,
            0b010000111000,
            0b000101100111,
            0b010001111111,
            0b000011000110,
            0b001011011010,
            0b011101110011,
            0b101101010100,
            0b000100000000,
            0b111101100000,
            0b001111110000,
            0b001101111010,
            0b010110100110,
            0b111001001111,
            0b001101110001,
            0b110110000010,
            0b001101101000,
            0b001100100101,
            0b111101110100,
            0b000101110001,
            0b010010111011,
            0b101000110100,
            0b100110111001,
            0b111001010000,
            0b000011001111,
            0b101000011101,
            0b100111111100,
            0b010111100100,
            0b101001101011,
            0b101000101001,
            0b001010001110,
            0b111001111101,
            0b100011001011,
            0b111101101011,
            0b110111001100,
            0b110100111010,
            0b111101111010,
            0b100111110011,
            0b111100010000,
            0b101110000010,
            0b001000111000,
            0b011001110110,
            0b011001101011,
            0b110100110001,
            0b010100110010,
            0b101000111001,
            0b010110010110,
            0b000010000000,
            0b111100011100,
            0b001110111111,
            0b010010100110,
            0b110001010010,
            0b110101101010,
            0b010011111000,
            0b011101010110,
            0b100001101100,
            0b000101100011,
            0b111100011111,
            0b010111111111,
            0b110000101111,
            0b101110111101,
            0b110011000100,
            0b010010000000,
            0b010100110100,
            0b101011111101,
            0b001011001110,
            0b111000011100,
            0b010110000100,
            0b011110001000,
            0b101010001110,
            0b111001010111,
            0b000001101011,
            0b001010011001,
            0b110001000000,
            0b110011100101,
            0b101000011100,
            0b001000101001,
            0b100100100101,
            0b101010000110,
            0b110001011111,
            0b001000110100,
            0b001000100111,
            0b110010011001,
            0b001001111011,
            0b010101100100,
            0b010110101101,
            0b101101000110,
            0b010011111101,
            0b000000111111,
            0b100111111110,
            0b100101111100,
            0b110010000001,
            0b010100010111,
            0b011110110000,
            0b111100110001,
            0b000010101101,
            0b111111010011,
            0b110110100000,
            0b000000010100,
            0b110000110100,
            0b111101111111,
            0b001001100100,
            0b100000001110,
            0b011101001000,
            0b010001101111,
            0b100101110110,
            0b101011101101,
            0b111011110111,
            0b101110011010,
            0b000001101110,
            0b000100011111,
            0b111111101010,
            0b000101011101,
            0b010110001001,
            0b110001000110,
            0b110101011110,
            0b100110100011,
            0b101100111000,
            0b011011001110,
            0b111000110000,
            0b000110001110,
            0b100110011110,
            0b110011101101,
            0b101100011111,
            0b011111000101,
            0b011101000100,
            0b000111110001,
            0b011111110011,
            0b011001100101,
            0b000100001100,
            0b100100011101,
            0b110011101110,
            0b101000000110,
            0b000100001111,
            0b110010101000,
            0b010110000101,
            0b110000010010,
            0b111010111001,
            0b001001000110,
            0b001000011010,
            0b110110001011,
            0b001101001110,
            0b111010011100,
            0b000101010110,
            0b111111001000,
            0b001001110000,
            0b101011100111,
            0b110101101001,
            0b101111110110,
            0b111010001011,
            0b010100101100,
            0b010110110000,
            0b110011010010,
            0b101010111010,
            0b010011001101,
            0b011101000101,
            0b101111111101,
            0b110000000100,
            0b011011011101,
            0b010101011000,
            0b000011001101,
            0b011101110000,
            0b100111011101,
            0b001100101001,
            0b100101100000,
            0b110010011010,
            0b101111011001,
            0b110010111010,
            0b110001100000,
            0b100100010110,
            0b100101010111,
            0b100110111110,
            0b010111011000,
            0b100100101011,
            0b101010011110,
            0b110011001011,
            0b100011101110,
            0b111000000110,
            0b010011000100,
            0b111011100011,
            0b000000011100,
            0b101011011000,
            0b100110001011,
            0b001011101101,
            0b000000000010,
            0b010011001111,
            0b001001110010,
            0b111011100100,
            0b100100010101,
            0b111110000001,
            0b011110100101,
            0b100110000100,
            0b001011101110,
            0b100010011110,
            0b001000110000,
            0b001100001010,
            0b011001001110,
            0b011010011001,
            0b111110011010,
            0b001010011111,
            0b100001100001,
            0b101011110111,
            0b111111001110,
            0b010000000001,
            0b001011110010,
            0b111010011111,
            0b101000110001,
            0b010011010100,
            0b000111000011,
            0b010101001110,
            0b101000110111,
            0b011010110001,
            0b011010100001,
            0b011010011110,
            0b000101101101,
            0b101101100101,
            0b011101101011,
            0b000011001001,
            0b111000111001,
            0b111100111000,
            0b000111100111,
            0b111101111101,
            0b000101011011,
            0b011111000100,
            0b110101000001,
            0b101000111011,
            0b110011010001,
            0b010011110101,
            0b101000000010,
            0b010111110101,
            0b101101101000,
            0b110111010011,
            0b000111111110,
            0b100001110110,
            0b100110001000,
            0b110110000101,
            0b111101100100,
            0b010001101010,
            0b111001000100,
            0b111001010100,
            0b101110001000,
            0b010000010110,
            0b100001100110,
            0b000110100010,
            0b111101010010,
            0b110000001111,
            0b010001100111,
            0b001000001010,
            0b110000011010,
            0b001011100110,
            0b100101101101,
            0b011001011100,
            0b001100101101,
            0b011110111001,
            0b001010001100,
            0b111011000011,
            0b100100000111,
            0b000100001010,
            0b011100101100,
            0b001101110100,
            0b001100011110,
            0b101010001111,
            0b000011001011,
            0b111001010010,
            0b110000101110,
            0b000101000011,
            0b010010000011,
            0b110010101101,
            0b010101011011,
            0b101011110001,
            0b110111100100,
            0b111010011010,
            0b011101010101,
            0b100001011100,
            0b011011100010,
            0b111000010100,
            0b101011011001,
            0b101110101100,
            0b000010011011,
            0b111110101101,
            0b100000101100,
            0b010000101010,
            0b010011111100,
            0b110110100001,
            0b100011001000,
            0b000001000010,
            0b101110010110,
            0b110101111000,
            0b101001101000,
            0b000001100000,
            0b110010011110,
            0b010111010110,
            0b111101010101,
            0b000010111011,
            0b011110111000,
            0b010101111010,
            0b001000000011,
            0b110001101010,
            0b111001011010,
            0b111010110011,
            0b100001010010,
            0b001011101111,
            0b000011101111,
            0b111011110010,
            0b000011011001,
            0b011110101100,
            0b011001111101,
            0b011010010111,
            0b000100100101,
            0b111100111100,
            0b010000001001,
            0b110011110000,
            0b010010010001,
            0b000111101000,
            0b100011001001,
            0b100111001010,
            0b011101111011,
            0b100110011011,
            0b101011111001,
            0b111111100011,
            0b010010111000,
            0b000001111001,
            0b010110011001,
            0b011100001011,
            0b110001110111,
            0b001010100111,
            0b110110100010,
            0b010111000101,
            0b100100001100,
            0b011110101110,
            0b111110111010,
            0b000000010011,
            0b110000101011,
            0b111010100100,
            0b011110011000,
            0b111010110001,
            0b000010001110,
            0b000001000111,
            0b110010101111,
            0b100001011111,
            0b111001100100,
            0b110000000110,
            0b100011101100,
            0b101011001001,
            0b000100101101,
            0b101101101011,
            0b001001110100,
            0b100100111100,
            0b010010101011,
            0b011110100000,
            0b110101100011,
            0b101101101010,
            0b100101010110,
            0b011000100000,
            0b111000101000,
            0b011110010110,
            0b001000010111,
            0b111010010111,
            0b111100000111,
            0b011000100011,
            0b010000111111,
            0b011001010111,
            0b011110011010,
            0b111111011100,
            0b011111101101,
            0b101111011101,
            0b101100100000,
            0b111111000000,
            0b111111111111,
            0b101011011101,
            0b000010101100,
            0b100101001101,
            0b111111001010,
            0b010100000000,
            0b010111001011,
            0b101110010101,
            0b000011011100,
            0b110101011000,
            0b111001101101,
            0b000001011101,
            0b000101011010,
            0b100110000110,
            0b111111001111,
            0b001011111110,
            0b111010011110,
            0b000011010110,
            0b011010111110,
            0b111110001001,
            0b100011001110,
            0b110111001101,
            0b110100100101,
            0b101011100110,
            0b110100000110,
            0b010011100101,
            0b001000010110,
            0b101001100101,
            0b111111110001,
            0b100110111000,
            0b111101001100,
            0b010001101000,
            0b011100100101,
            0b111101010011,
            0b000110011001,
            0b010100010100,
            0b110100100010,
            0b100101100100,
            0b100011001101,
            0b001000100001,
            0b110100100111,
            0b111010011011,
            0b011000010010,
            0b111001100011,
            0b001111101011,
            0b010110111101,
            0b000001011010,
            0b100000010110,
            0b010100011011,
            0b110000110011,
            0b111111111010,
            0b111000100100,
            0b100100011011,
            0b000111110110,
            0b010000000010,
            0b010111110111,
            0b100011100001,
            0b001101000100,
            0b011111011111,
            0b000010011111,
            0b000101011110,
            0b001100100111,
            0b101001000100,
            0b000011011010,
            0b101101001101,
            0b010010010110,
            0b001100001110,
            0b100101000001,
            0b111100000101,
            0b100000111111,
            0b010111111011,
            0b101101110110,
            0b001000010001,
            0b110111101000,
            0b110101001111,
            0b101110000100,
            0b110001110011,
            0b010010011010,
            0b011010101111,
            0b111110001010,
            0b110010110000,
            0b101001000110,
            0b000010000001,
            0b001100011111,
            0b100101000110,
            0b010101100011,
            0b000100111100,
            0b101011010101,
            0b010001110001,
            0b001010011110,
            0b101100001110,
            0b101111010001,
            0b000000010000,
            0b011111001111,
            0b100011101111,
            0b001000111100,
            0b101001011111,
            0b111111010111,
            0b001010110110,
            0b111101101110,
            0b011000101011,
            0b111011100110,
            0b010001001000,
            0b001010111001,
            0b111010111011,
            0b111111110110,
            0b110110001000,
            0b001000100010,
            0b101010101110,
            0b101010100011,
            0b100100111101,
            0b000110010001,
            0b111110010110,
            0b000101100001,
            0b010100100111,
            0b001101100010,
            0b110011110111,
            0b011100110110,
            0b100101011000,
            0b011101011111,
            0b110110000011,
            0b100010110100,
            0b011011001000,
            0b111000101101,
            0b110100000101,
            0b011001000001,
            0b001011000111,
        ])
    }

    fn part1_test_input() -> Vec<u16> {
        Vec::from([
            0b00100, 0b11110, 0b10110, 0b10111, 0b10101, 0b01111, 0b00111, 0b11100, 0b10000,
            0b11001, 0b00010, 0b01010,
        ])
    }

    fn part2_test_input() -> Vec<u16> {
        Self::part1_test_input()
    }

    fn part1(input: Vec<u16>, is_test: bool) -> u32 {
        let max = if is_test { 5 } else { 12 };
        let gamma = (0..max)
            .into_iter()
            .fold(0, |acc, pos| acc + (find_most_frequent(&input, pos) << pos));
        let epsilon = !gamma & ((1 << max) - 1);

        gamma as u32 * epsilon as u32
    }

    fn part2(input: Vec<u16>, is_test: bool) -> u32 {
        let max = if is_test { 5 } else { 12 };

        let oxygen = find_by_criteria(&input, max - 1, |a, pos, arr| {
            let cmp = find_most_frequent(arr, pos) << pos;
            a & (1 << pos) == cmp
        });

        let co2 = find_by_criteria(&input, max - 1, |a, pos, arr| {
            let cmp = (!find_most_frequent(arr, pos) & 1) << pos;
            a & 1 << pos == cmp & 1 << pos
        });

        oxygen as u32 * co2 as u32
    }
}

fn find_most_frequent(arr: &Vec<u16>, pos: u16) -> u16 {
    let (count0, count1) =
        arr.iter()
            .map(|bin| (bin & (1 << pos)) >> pos)
            .fold((0, 0), |mut map, bit| {
                match bit {
                    0 => map.0 += 1,
                    1 => map.1 += 1,
                    _ => {}
                };
                map
            });
    if count0 > count1 {
        0
    } else {
        1
    }
}

fn find_by_criteria(arr: &Vec<u16>, pos: u16, criteria: fn(u16, u16, &Vec<u16>) -> bool) -> u16 {
    let filtered: Vec<u16> = arr
        .iter()
        .filter(|&&bin| criteria(bin, pos, &arr))
        .map(|&x| x)
        .collect();

    if filtered.len() == 1 {
        return filtered[0];
    }

    find_by_criteria(&filtered, pos - 1, criteria)
}
